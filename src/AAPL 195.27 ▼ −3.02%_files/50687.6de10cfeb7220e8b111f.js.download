"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[50687],{934026:(n,t,e)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pointInCircle=t.pointInPolygon=t.pointInBox=t.pointInTriangle=t.pointInHalfplane=void 0;var i=e(5531);t.pointInHalfplane=function(n,t){var e=t.edge;return e.A*n.x+e.B*n.y+e.C>0===t.isPositive},t.pointInTriangle=function(n,t,e,r){var o=t.add(e).scaled(.5).add(r).scaled(.5),u=i.intersectLineSegments(t,e,o,n);return null===u&&(null===(u=i.intersectLineSegments(e,r,o,n))&&null===(u=i.intersectLineSegments(r,t,o,n)))},t.pointInBox=function(n,t){return n.x>=t.min.x&&n.x<=t.max.x&&n.y>=t.min.y&&n.y<=t.max.y},t.pointInPolygon=function(n,t){for(var e=t.length-1,i=!1,r=n.x,o=n.y,u=0;u<t.length;u++){var a=t[u],l=t[e];(a.y<o&&l.y>=o||l.y<o&&a.y>=o)&&a.x+(o-a.y)/(l.y-a.y)*(l.x-a.x)<r&&(i=!i),e=u}return i},t.pointInCircle=function(n,t,e){return(n.x-t.x)*(n.x-t.x)+(n.y-t.y)*(n.y-t.y)<=e*e}},204652:(n,t)=>{function e(n,t,e){var i=t.subtract(n),r=e.subtract(n).dotProduct(i)/i.dotProduct(i);return{coeff:r,distance:n.addScaled(i,r).subtract(e).length()}}Object.defineProperty(t,"__esModule",{value:!0}),t.distanceToSegment=t.distanceToLine=void 0,t.distanceToLine=e,t.distanceToSegment=function(n,t,i){var r=e(n,t,i);if(0<=r.coeff&&r.coeff<=1)return r;var o=n.subtract(i).length(),u=t.subtract(i).length();return o<u?{coeff:0,distance:o}:{coeff:1,distance:u}}},5531:(n,t,e)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.intersectPolygons=t.intersectPolygonAndHalfplane=t.intersectRayAndBox=t.intersectLineAndBox=t.intersectLineSegments=t.intersectLines=t.intersectLineSegmentAndBox=void 0;var i=e(650151),r=e(86441),o=e(204652),u=e(934026);function a(n,t){var e=n.A,i=t.A,o=n.B,u=t.B,a=n.C,l=t.C,s=e*u-i*o;if(Math.abs(s)<1e-6)return null;var c=(o*l-u*a)/s,h=(i*a-e*l)/s;return new r.Point(c,h)}function l(n,t,e,i){var r=function(n,t,e,i){var r=t.subtract(n),o=i.subtract(e),u=r.x*o.y-r.y*o.x;if(Math.abs(u)<1e-6)return null;var a=n.subtract(e);return(a.y*o.x-a.x*o.y)/u}(n,t,e,i);if(null===r)return null;var u=t.subtract(n).scaled(r).add(n),a=o.distanceToSegment(e,i,u);return Math.abs(a.distance)<1e-6?r:null}function s(n,t){for(var e=0,i=n;e<i.length;e++){var o=i[e];if(r.equalPoints(o,t))return!1}return n.push(t),!0}function c(n,t){return!(n.length>0&&(r.equalPoints(n[n.length-1],t)||r.equalPoints(n[0],t)))&&(n.push(t),!0)}function h(n,t){for(var e=[],i=0;i<n.length;++i){var o=n[i],l=n[(i+1)%n.length],s=r.lineThroughPoints(o,l);if(u.pointInHalfplane(o,t)){if(c(e,o),!u.pointInHalfplane(l,t))null!==(h=a(s,t.edge))&&c(e,h)}else if(u.pointInHalfplane(l,t)){var h;null!==(h=a(s,t.edge))&&c(e,h)}}return e.length>=3?e:null}t.intersectLineSegmentAndBox=function(n,t){var e=n[0].x,i=n[0].y,o=n[1].x,u=n[1].y,a=t.min.x,l=t.min.y,s=t.max.x,c=t.max.y;function h(n,t,e,i,r,o){var u=0;return n<e?u|=1:n>r&&(u|=2),t<i?u|=4:t>o&&(u|=8),u}for(var f=h(e,i,a,l,s,c),x=h(o,u,a,l,s,c),y=!1,d=0;;){if(d>1e3)throw new Error("Cohen - Sutherland algorithm: infinity loop");if(d++,!(f|x)){y=!0;break}if(f&x)break
;var p=f||x,g=void 0,m=void 0;8&p?(g=e+(o-e)*(c-i)/(u-i),m=c):4&p?(g=e+(o-e)*(l-i)/(u-i),m=l):2&p?(m=i+(u-i)*(s-e)/(o-e),g=s):(m=i+(u-i)*(a-e)/(o-e),g=a),p===f?f=h(e=g,i=m,a,l,s,c):x=h(o=g,u=m,a,l,s,c)}return y?r.equalPoints(r.point(e,i),r.point(o,u))?r.point(e,i):r.lineSegment(r.point(e,i),r.point(o,u)):null},t.intersectLines=a,t.intersectLineSegments=l,t.intersectLineAndBox=function(n,t){var e=t.min.x,o=t.min.y,u=t.max.x,a=t.max.y;if(0===n.A){var l=-n.C/n.B;return o<=l&&l<=a?r.lineSegment(r.point(e,l),r.point(u,l)):null}if(0===n.B){var c=-n.C/n.A;return e<=c&&c<=u?r.lineSegment(r.point(c,o),r.point(c,a)):null}var h=[],f=function(t){var e=function(n,t){return-(n.C+n.A*t)/n.B}(n,t);o<=e&&e<=a&&s(h,new r.Point(t,e))},x=function(t){var i=function(n,t){return-(n.C+n.B*t)/n.A}(n,t);e<=i&&i<=u&&s(h,new r.Point(i,t))};switch(f(e),x(o),f(u),x(a),h.length){case 0:return null;case 1:return h[0];case 2:return r.equalPoints(h[0],h[1])?h[0]:r.lineSegment(h[0],h[1])}return i.assert(!1,"We should have at most two intersection points"),null},t.intersectRayAndBox=function(n,t,e){var i=l(n,t,e.min,new r.Point(e.max.x,e.min.y)),o=l(n,t,new r.Point(e.max.x,e.min.y),e.max),a=l(n,t,e.max,new r.Point(e.min.x,e.max.y)),s=l(n,t,new r.Point(e.min.x,e.max.y),e.min),c=[];if(null!==i&&i>=0&&c.push(i),null!==o&&o>=0&&c.push(o),null!==a&&a>=0&&c.push(a),null!==s&&s>=0&&c.push(s),0===c.length)return null;c.sort((function(n,t){return n-t}));var h=u.pointInBox(n,e)?c[0]:c[c.length-1];return n.addScaled(t.subtract(n),h)},t.intersectPolygonAndHalfplane=h,t.intersectPolygons=function(n,t){for(var e=n,i=0;i<t.length&&null!==e;++i){var o=t[i],u=t[(i+1)%t.length],a=t[(i+2)%t.length],l=r.lineThroughPoints(o,u);e=h(e,r.halfplaneThroughPoint(l,a))}return e}},86441:(n,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.equalBoxes=t.box=t.halfplaneThroughPoint=t.halfplane=t.lineSegment=t.lineThroughPoints=t.line=t.equalPoints=t.point=t.Point=void 0;var e=function(){function n(n,t){this.x=n,this.y=t}return n.prototype.add=function(t){return new n(this.x+t.x,this.y+t.y)},n.prototype.addScaled=function(t,e){return new n(this.x+e*t.x,this.y+e*t.y)},n.prototype.subtract=function(t){return new n(this.x-t.x,this.y-t.y)},n.prototype.dotProduct=function(n){return this.x*n.x+this.y*n.y},n.prototype.crossProduct=function(n){return this.x*n.y-this.y*n.x},n.prototype.signedAngle=function(n){return Math.atan2(this.crossProduct(n),this.dotProduct(n))},n.prototype.angle=function(n){return Math.acos(this.dotProduct(n)/(this.length()*n.length()))},n.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},n.prototype.scaled=function(t){return new n(this.x*t,this.y*t)},n.prototype.normalized=function(){return this.scaled(1/this.length())},n.prototype.transposed=function(){return new n(-this.y,this.x)},n.prototype.clone=function(){return new n(this.x,this.y)},n}();function i(n,t){return new e(n,t)}function r(n,t){return n.x===t.x&&n.y===t.y}function o(n,t,e){if(0===n&&0===t)throw new Error("A and B can not be both equal to zero.");return{A:n,B:t,C:e}}
function u(n,t){return{edge:n,isPositive:t}}t.Point=e,t.point=i,t.equalPoints=r,t.line=o,t.lineThroughPoints=function(n,t){if(r(n,t))throw new Error("Points should be distinct");return o(n.y-t.y,t.x-n.x,n.x*t.y-t.x*n.y)},t.lineSegment=function(n,t){if(r(n,t))throw new Error("Points of a segment should be distinct");return[n,t]},t.halfplane=u,t.halfplaneThroughPoint=function(n,t){return u(n,n.A*t.x+n.B*t.y+n.C>0)},t.box=function(n,t){return{min:i(Math.min(n.x,t.x),Math.min(n.y,t.y)),max:i(Math.max(n.x,t.x),Math.max(n.y,t.y))}},t.equalBoxes=function(n,t){return r(n.min,t.min)&&r(n.max,t.max)}}}]);